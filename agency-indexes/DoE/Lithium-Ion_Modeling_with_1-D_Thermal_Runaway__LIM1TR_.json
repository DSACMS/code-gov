{
    "contact": {
        "email": "copyrightadmin@sandia.gov"
    },
    "date": {
        "created": "2020-09-04",
        "metadataLastUpdated": "2024-07-23"
    },
    "description": "Lithium ion battery technology presents a great opportunity for addressing the need for energy storage. However, in the event of a damaging accident, battery misuse, or manufacturing defect a battery can go in to thermal runaway. This event can be hazardous to nearby humans, flammable materials, and other batteries. When multiple batteries are packed close to one another such as in an energy storage system or electric vehicle, a thermal runaway event in a single can lead to a cascading failure that propagates through neighboring cells. \nA model of cascading failure in a stack of batteries that requires less computational time than a fully resolved system model would be valuable to battery pack designers, fire protection engineers looking at hazards, and researchers developing kinetic and thermal models. A 1-D approximation is reasonable for a stack of pouch/prismatic cells as the thermal conductivity along the electrode materials is significantly higher that the thermal conductivity between layers. This approximation allows for quick testing of chemistry models in cascading failure or single battery/component situations. \nThe primary outputs of this model are the propagation speed and temperature in the battery stack as well as the heat transferred to surrounding materials. The package also aims to provide methods for simulating accelerating rate calorimetry (ARC) and differential scanning calorimetry (DSC) experiments which are commonly used for developing kinetic models for thermal runaway. Simulation of ARC and DSC experiments may not be included in the initial release of the software.\nSandia has been tasked with providing an ability to predict thermal runaway. This tool serves this purpose by providing a platform to communicate the results of this research in a format that allows interaction with the external community. Internal Sandia codes exist with similar capabilities for higher fidelity models and a greater range of customizable physics models. However, these codes are generally not available to designers or fire protection engineers in industry. Additionally, constructing a 1-D approximation in these codes is not a trivial exercise. Commercial codes such as Comsol are also available, but these codes require a license and are not open source. These particular models for thermal runaway are not necessarily available in Comsol and Sandia does not plan to develop in Comsol. No open source finite volume code tailored to battery thermal runaway is known to the authors at this time.\nWe propose the inclusion of the following physics in the model: heat conduction, heat transfer to surroundings/enclosure via convection and radiation, chemical kinetics based on common models from literature with a limited set of options for modifying the kinetic equations, short circuit heating, and conduction between spacer materials. Future versions of the code may include models for gas venting and the associated heat released from the combustion of these gases. The code is written in Python 2.7 with a small number of required packages commonly used for scientific computing. The code also includes a set of unit tests and verification tests. The implementation of this framework with our models allows interaction with other researchers to investigate design variables such as the kinetic parameters and material thermal properties of Li-ion batteries.SAND2019-8934 M\n\nSandia National Laboratories is a multimission laboratory managed and operated by National Technology & Engineering Solutions of Sandia, LLC, a wholly owned subsidiary of Honeywell International Inc., for the U.S. Department of Energy's National Nuclear Security Administration under contract DE-NA0003525.",
    "laborHours": 1884.8,
    "languages": [
        "Python",
        "Cython"
    ],
    "name": "Lithium-Ion Modeling with 1-D Thermal Runaway (LIM1TR)",
    "organization": "Sandia National Laboratories (SNL)",
    "permissions": {
        "exemptionText": null,
        "licenses": [
            {
                "URL": "https://api.github.com/licenses/agpl-3.0",
                "name": "AGPL-3.0"
            }
        ],
        "usageType": "openSource"
    },
    "repositoryURL": "https://github.com/sandialabs/lim1tr",
    "status": "Production",
    "tags": [
        "DOE CODE",
        "Sandia National Laboratories (SNL)"
    ],
    "vcs": "git"
}
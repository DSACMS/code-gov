{
  "2836288832": {
    "id": "2836288832",
    "number": 317,
    "url": "https://github.com/DSACMS/metrics/issues/317",
    "content_title": "Adding contract data to metrics",
    "content_description": "## MENTOR\n- @natalialuzuriaga, @IsaacMilarky, @DinneK \n- USDC SWE Fellows, OSPO\n- Slack\n\n## BRIEF DESCRIPTION\n\nWe would like to include contract data in the metrics website. So far, we have a field in code.json for contractNumber but we haven't implemented functionality connecting to the dots to the metrics website. After research, usaspending.gov has a restfulAPI that we can use!\n\n## SCOPING\n- 1-2 weeks\n\n## SKILLS NEEDED\nPython, HTML/CSS/JS, Figma\n\n## REQUIRED DELIVERABLES\nMake as clear of a step-by-step list as you can:\n1. Create contract data designs for repository report page using Figma. Get feedback and review by @DinneK and everyone on the team.\n2. Backend: Use the API to add contract data. Work with @IsaacMilarky \n3. Frontend: Implement in frontend. Work with @DinneK \n\n## DESIRED DELIVERY WINDOW\n- June, July, or August\n\n## NOTES/INSPO\n\nAward Web Page: https://www.usaspending.gov/award/ASST_NON_2505CA5MAP_7530 \nExample API call: https://api.usaspending.gov/api/v2/awards/ASST_NON_2505CA5MAP_7530/ \nDocs: https://github.com/fedspendingtransparency/usaspending-api/blob/master/usaspending_api/api_contracts/contracts/v2/awards/award_id.md \n\n# ACKNOWLEDGEMENTS\n- [X] - Yes, I agree to spend file a project proposal ticket\n- [X] - Yes, I agree this project falls within a 2 week or less (ideally less) scope of time\n- [X] - Yes, I agree to spend an hour per week of office hours and 1x1 mentoring\n- [X] - Yes, I agree to spend an hour at the end of the sprint for filling out a Retro Template\n",
    "repo_name": "metrics",
    "repo_url": "https://github.com/DSACMS/metrics",
    "repo_language": "Liquid",
    "repo_owner": "DSACMS",
    "status_is_open": true,
    "status_has_assignee": false,
    "status_is_locked": false,
    "time_created_date": "2025-02-06T18:28:23Z",
    "time_last_updated": "2025-06-25T20:07:44Z",
    "time_days_old": 144,
    "time_last_activity_days_ago": 5,
    "people_author": "natalialuzuriaga",
    "people_assignee": null,
    "people_author_type": "User",
    "labels_list": [
      "Summer2024",
      "rotation",
      "code-gov"
    ],
    "labels_count": 3,
    "labels_has_priority": false,
    "labels_has_difficulty": false,
    "engagement_comment_count": 0,
    "engagement_reaction_count": 0,
    "engagement_score": 0,
    "flags_is_beginner_friendly": false,
    "flags_needs_help": false,
    "flags_is_bug": false,
    "flags_is_feature": false,
    "flags_is_stale": false
  },
  "2878676556": {
    "id": "2878676556",
    "number": 339,
    "url": "https://github.com/DSACMS/metrics/issues/339",
    "content_title": "Automate adding new public DSACMS repos to metrics reports?",
    "content_description": "## Problem\n`projects_tracked.json` needs to be manually updated when a new public repo is released\n\n## Solution\nWe could create a GitHub action that will run on a weekly basis that checks each of our tracked orgs for new public repositories that are not currently being tracked. We could also check for whether those repos contain a code.json file, as a 'confirmation' that they are 'ready' to be ingested into the metric site?\n\n## Resources\nhttps://github.com/DSACMS/metrics/blob/main/scripts/_metadata/projects_tracked.json",
    "repo_name": "metrics",
    "repo_url": "https://github.com/DSACMS/metrics",
    "repo_language": "Liquid",
    "repo_owner": "DSACMS",
    "status_is_open": true,
    "status_has_assignee": false,
    "status_is_locked": false,
    "time_created_date": "2025-02-25T14:57:54Z",
    "time_last_updated": "2025-06-25T20:02:52Z",
    "time_days_old": 126,
    "time_last_activity_days_ago": 5,
    "people_author": "decause-gov",
    "people_assignee": null,
    "people_author_type": "User",
    "labels_list": [
      "enhancement",
      "question",
      "github_actions",
      "metrics",
      "code-gov"
    ],
    "labels_count": 5,
    "labels_has_priority": false,
    "labels_has_difficulty": false,
    "engagement_comment_count": 0,
    "engagement_reaction_count": 0,
    "engagement_score": 0,
    "flags_is_beginner_friendly": false,
    "flags_needs_help": false,
    "flags_is_bug": false,
    "flags_is_feature": true,
    "flags_is_stale": false
  },
  "3008914624": {
    "id": "3008914624",
    "number": 47,
    "url": "https://github.com/DSACMS/codejson-generator/issues/47",
    "content_title": "Form: Updating styling",
    "content_description": "## Issue Report\n\nForm: Updating styling\n\n### Expected behavior\n\n- We would like form to match the styling of the SHARE IT Landing Page for consistency in branding: https://dsacms.github.io/share-it-act-lp/\n\n### Actual behavior\n\n- Currently uses custom CSS and bootstrap on the frontend.\n",
    "repo_name": "codejson-generator",
    "repo_url": "https://github.com/DSACMS/codejson-generator",
    "repo_language": "JavaScript",
    "repo_owner": "DSACMS",
    "status_is_open": true,
    "status_has_assignee": false,
    "status_is_locked": false,
    "time_created_date": "2025-04-21T17:29:10Z",
    "time_last_updated": "2025-06-25T20:09:16Z",
    "time_days_old": 71,
    "time_last_activity_days_ago": 5,
    "people_author": "natalialuzuriaga",
    "people_assignee": null,
    "people_author_type": "User",
    "labels_list": [
      "enhancement",
      "code-gov"
    ],
    "labels_count": 2,
    "labels_has_priority": false,
    "labels_has_difficulty": false,
    "engagement_comment_count": 0,
    "engagement_reaction_count": 0,
    "engagement_score": 0,
    "flags_is_beginner_friendly": false,
    "flags_needs_help": false,
    "flags_is_bug": false,
    "flags_is_feature": true,
    "flags_is_stale": false
  },
  "3018169397": {
    "id": "3018169397",
    "number": 49,
    "url": "https://github.com/DSACMS/codejson-generator/issues/49",
    "content_title": "VCS agnostic auto generation",
    "content_description": "Currently the auto generation only works with the use of GitHub. We should be agnostic to all version control systems. #48 has more discussion on this in the comments",
    "repo_name": "codejson-generator",
    "repo_url": "https://github.com/DSACMS/codejson-generator",
    "repo_language": "JavaScript",
    "repo_owner": "DSACMS",
    "status_is_open": true,
    "status_has_assignee": false,
    "status_is_locked": false,
    "time_created_date": "2025-04-24T18:48:05Z",
    "time_last_updated": "2025-06-25T20:09:17Z",
    "time_days_old": 67,
    "time_last_activity_days_ago": 5,
    "people_author": "sachin-panayil",
    "people_assignee": null,
    "people_author_type": "User",
    "labels_list": [
      "code-gov"
    ],
    "labels_count": 1,
    "labels_has_priority": false,
    "labels_has_difficulty": false,
    "engagement_comment_count": 0,
    "engagement_reaction_count": 0,
    "engagement_score": 0,
    "flags_is_beginner_friendly": false,
    "flags_needs_help": false,
    "flags_is_bug": false,
    "flags_is_feature": false,
    "flags_is_stale": false
  },
  "3018171660": {
    "id": "3018171660",
    "number": 50,
    "url": "https://github.com/DSACMS/codejson-generator/issues/50",
    "content_title": "Take into consideration multiple LICENSE URLs",
    "content_description": "IDEA: Have a 'checker' that detects whether all URLs return a 200 when the generate button is clicked.\n\n#48 for more reference",
    "repo_name": "codejson-generator",
    "repo_url": "https://github.com/DSACMS/codejson-generator",
    "repo_language": "JavaScript",
    "repo_owner": "DSACMS",
    "status_is_open": true,
    "status_has_assignee": false,
    "status_is_locked": false,
    "time_created_date": "2025-04-24T18:48:57Z",
    "time_last_updated": "2025-06-25T20:09:17Z",
    "time_days_old": 67,
    "time_last_activity_days_ago": 5,
    "people_author": "sachin-panayil",
    "people_assignee": null,
    "people_author_type": "User",
    "labels_list": [
      "code-gov"
    ],
    "labels_count": 1,
    "labels_has_priority": false,
    "labels_has_difficulty": false,
    "engagement_comment_count": 0,
    "engagement_reaction_count": 0,
    "engagement_score": 0,
    "flags_is_beginner_friendly": false,
    "flags_needs_help": false,
    "flags_is_bug": false,
    "flags_is_feature": false,
    "flags_is_stale": false
  },
  "3018174794": {
    "id": "3018174794",
    "number": 51,
    "url": "https://github.com/DSACMS/codejson-generator/issues/51",
    "content_title": "Support multiple different schemas depending on user",
    "content_description": "Have multiple different schemas for the form and use a drop down to select them to support different agencies\n\n#48 for more reference",
    "repo_name": "codejson-generator",
    "repo_url": "https://github.com/DSACMS/codejson-generator",
    "repo_language": "JavaScript",
    "repo_owner": "DSACMS",
    "status_is_open": true,
    "status_has_assignee": false,
    "status_is_locked": false,
    "time_created_date": "2025-04-24T18:50:22Z",
    "time_last_updated": "2025-06-25T20:09:18Z",
    "time_days_old": 67,
    "time_last_activity_days_ago": 5,
    "people_author": "sachin-panayil",
    "people_assignee": null,
    "people_author_type": "User",
    "labels_list": [
      "code-gov"
    ],
    "labels_count": 1,
    "labels_has_priority": false,
    "labels_has_difficulty": false,
    "engagement_comment_count": 0,
    "engagement_reaction_count": 0,
    "engagement_score": 0,
    "flags_is_beginner_friendly": false,
    "flags_needs_help": false,
    "flags_is_bug": false,
    "flags_is_feature": false,
    "flags_is_stale": false
  },
  "3087309433": {
    "id": "3087309433",
    "number": 31,
    "url": "https://github.com/DSACMS/automated-codejson-generator/issues/31",
    "content_title": "Shallow merge logic allows for improper merge",
    "content_description": "Since the logic currently runs a shallow merge, we sometimes lose the manual inputs of nested objects and arrays since they are not included in the merge properly. We need to create a way to merge each field properly regardless of the user scenario ",
    "repo_name": "automated-codejson-generator",
    "repo_url": "https://github.com/DSACMS/automated-codejson-generator",
    "repo_language": "TypeScript",
    "repo_owner": "DSACMS",
    "status_is_open": true,
    "status_has_assignee": false,
    "status_is_locked": false,
    "time_created_date": "2025-05-23T19:15:55Z",
    "time_last_updated": "2025-06-25T20:02:03Z",
    "time_days_old": 38,
    "time_last_activity_days_ago": 5,
    "people_author": "sachin-panayil",
    "people_assignee": null,
    "people_author_type": "User",
    "labels_list": [
      "bug",
      "code-gov"
    ],
    "labels_count": 2,
    "labels_has_priority": false,
    "labels_has_difficulty": false,
    "engagement_comment_count": 0,
    "engagement_reaction_count": 0,
    "engagement_score": 0,
    "flags_is_beginner_friendly": false,
    "flags_needs_help": false,
    "flags_is_bug": true,
    "flags_is_feature": false,
    "flags_is_stale": false
  },
  "3104214028": {
    "id": "3104214028",
    "number": 33,
    "url": "https://github.com/DSACMS/automated-codejson-generator/issues/33",
    "content_title": "Outputs don't seem to be there",
    "content_description": "Hi! First of all, thank you so much for building this! \n\nI'm on MDCT and it works awesome as intended. I tried to automate further so that it would automate the merging of the PR this project produces. There are some issues related to that that I've hit but in the process of bumbling around I noticed that this file:\nhttps://github.com/DSACMS/automated-codejson-generator/blob/main/action.yml\nmade me think that I could expect outputs:\n```yml\noutputs:\n  updated:\n    description: \"Boolean indicating whether code.json was updated\"\n  pr_url:\n    description: \"URL of the created pull request if changes were made\"\n```\nto be present such that in my own update-code-json.yml file I could do something like this:\n```yml\nname: Update Code.json\non:\n  workflow_dispatch:\n  schedule:\n    - cron: \"0 0 1 * *\" # monthly on day 1\n\npermissions:\n  contents: write\n  pull-requests: write\n\njobs:\n  update-code-json:\n    runs-on: ubuntu-latest\n    steps:\n\n       ...\n\n      - name: Update code.json\n        id: update\n        uses: DSACMS/automated-codejson-generator@main\n        with:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          BRANCH: \"main\"\n\n      - name: Print PR url\n        run: |\n          echo \"${{steps.update.outputs.pr_url}}\"\n```\nIt's not stopping me anymore because I got something like this thrown together:\n```yml\n      - name: Print PR url\n        run: |\n          PR_URL=$(gh pr list --state open --json url,headRefName \\\n            --jq '.[] | select(.headRefName | startswith(\"code-json-\")) | .url' \\\n            | head -n 1)\n          echo \"Found PR: $PR_URL\"\n```\nFeel free to remove or close this issue if it isn't helpful and thanks again for building this, it's been super helpful!",
    "repo_name": "automated-codejson-generator",
    "repo_url": "https://github.com/DSACMS/automated-codejson-generator",
    "repo_language": "TypeScript",
    "repo_owner": "DSACMS",
    "status_is_open": true,
    "status_has_assignee": false,
    "status_is_locked": false,
    "time_created_date": "2025-05-30T20:29:51Z",
    "time_last_updated": "2025-06-25T20:02:14Z",
    "time_days_old": 31,
    "time_last_activity_days_ago": 5,
    "people_author": "peoplespete",
    "people_assignee": null,
    "people_author_type": "User",
    "labels_list": [
      "good first issue",
      "code-gov"
    ],
    "labels_count": 2,
    "labels_has_priority": false,
    "labels_has_difficulty": false,
    "engagement_comment_count": 2,
    "engagement_reaction_count": 1,
    "engagement_score": 3,
    "flags_is_beginner_friendly": true,
    "flags_needs_help": false,
    "flags_is_bug": false,
    "flags_is_feature": false,
    "flags_is_stale": false
  }
}
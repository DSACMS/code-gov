{
  "2836288832": {
    "id": "2836288832",
    "number": 317,
    "url": "https://github.com/DSACMS/metrics/issues/317",
    "content_title": "Adding contract data to metrics",
    "content_description": "## MENTOR\n- @natalialuzuriaga, @IsaacMilarky, @DinneK \n- USDC SWE Fellows, OSPO\n- Slack\n\n## BRIEF DESCRIPTION\n\nWe would like to include contract data in the metrics website. So far, we have a field in code.json for contractNumber but we haven't implemented functionality connecting to the dots to the metrics website. After research, usaspending.gov has a restfulAPI that we can use!\n\n## SCOPING\n- 1-2 weeks\n\n## SKILLS NEEDED\nPython, HTML/CSS/JS, Figma\n\n## REQUIRED DELIVERABLES\nMake as clear of a step-by-step list as you can:\n1. Create contract data designs for repository report page using Figma. Get feedback and review by @DinneK and everyone on the team.\n2. Backend: Use the API to add contract data. Work with @IsaacMilarky \n3. Frontend: Implement in frontend. Work with @DinneK \n\n## DESIRED DELIVERY WINDOW\n- June, July, or August\n\n## NOTES/INSPO\n\nAward Web Page: https://www.usaspending.gov/award/ASST_NON_2505CA5MAP_7530 \nExample API call: https://api.usaspending.gov/api/v2/awards/ASST_NON_2505CA5MAP_7530/ \nDocs: https://github.com/fedspendingtransparency/usaspending-api/blob/master/usaspending_api/api_contracts/contracts/v2/awards/award_id.md \n\n# ACKNOWLEDGEMENTS\n- [X] - Yes, I agree to spend file a project proposal ticket\n- [X] - Yes, I agree this project falls within a 2 week or less (ideally less) scope of time\n- [X] - Yes, I agree to spend an hour per week of office hours and 1x1 mentoring\n- [X] - Yes, I agree to spend an hour at the end of the sprint for filling out a Retro Template\n",
    "repo_name": "metrics",
    "repo_url": "https://github.com/DSACMS/metrics",
    "repo_language": "Liquid",
    "repo_owner": "DSACMS",
    "status_is_open": true,
    "status_has_assignee": false,
    "status_is_locked": false,
    "time_created_date": "2025-02-06T18:28:23Z",
    "time_last_updated": "2025-06-25T20:07:44Z",
    "time_days_old": 140,
    "time_last_activity_days_ago": 1,
    "people_author": "natalialuzuriaga",
    "people_assignee": null,
    "people_author_type": "User",
    "labels_list": [
      "Summer2024",
      "rotation",
      "code-gov"
    ],
    "labels_count": 3,
    "labels_has_priority": false,
    "labels_has_difficulty": false,
    "engagement_comment_count": 0,
    "engagement_reaction_count": 0,
    "engagement_score": 0,
    "flags_is_beginner_friendly": false,
    "flags_needs_help": false,
    "flags_is_bug": false,
    "flags_is_feature": false,
    "flags_is_stale": false
  },
  "2878676556": {
    "id": "2878676556",
    "number": 339,
    "url": "https://github.com/DSACMS/metrics/issues/339",
    "content_title": "Automate adding new public DSACMS repos to metrics reports?",
    "content_description": "## Problem\n`projects_tracked.json` needs to be manually updated when a new public repo is released\n\n## Solution\nWe could create a GitHub action that will run on a weekly basis that checks each of our tracked orgs for new public repositories that are not currently being tracked. We could also check for whether those repos contain a code.json file, as a 'confirmation' that they are 'ready' to be ingested into the metric site?\n\n## Resources\nhttps://github.com/DSACMS/metrics/blob/main/scripts/_metadata/projects_tracked.json",
    "repo_name": "metrics",
    "repo_url": "https://github.com/DSACMS/metrics",
    "repo_language": "Liquid",
    "repo_owner": "DSACMS",
    "status_is_open": true,
    "status_has_assignee": false,
    "status_is_locked": false,
    "time_created_date": "2025-02-25T14:57:54Z",
    "time_last_updated": "2025-06-25T20:02:52Z",
    "time_days_old": 121,
    "time_last_activity_days_ago": 1,
    "people_author": "decause-gov",
    "people_assignee": null,
    "people_author_type": "User",
    "labels_list": [
      "enhancement",
      "question",
      "github_actions",
      "metrics",
      "code-gov"
    ],
    "labels_count": 5,
    "labels_has_priority": false,
    "labels_has_difficulty": false,
    "engagement_comment_count": 0,
    "engagement_reaction_count": 0,
    "engagement_score": 0,
    "flags_is_beginner_friendly": false,
    "flags_needs_help": false,
    "flags_is_bug": false,
    "flags_is_feature": true,
    "flags_is_stale": false
  }
}